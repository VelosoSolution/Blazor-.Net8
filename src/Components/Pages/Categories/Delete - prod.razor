@page "/products/delete/{id:int}"
@inject ApplicationDbContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer
@* @attribute [Authorize(Roles = "ADMIN")] *@

@if (Id <=0)
{
    <p class="text-center">
        <em>Produto não encontrado</em>
    </p>
}
else
{
    <h1>@Model.Title (@Model.Id)</h1>
    <EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Nome da categoria</label>
            <InputText @bind-Value="Model.Title" class="form-control" readonly />
            <ValidationMessage For="@(() => Model.Title)" />
        </div>

        <button type="submit" class="btn btn-danger">
            Deletar
        </button>
        <a href="/products">Cancelar</a>
    </EditForm>
}

@code {

    [Parameter]
    public int Id { get; set; }

    public Product? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await Context
            .Products
            .AsNoTracking()
            .FirstOrDefaultAsync(x => x.Id == Id);
    }

    public async Task OnValidSubmit()
    {
        Context.Remove(Model);
        await Context.SaveChangesAsync();
        Navigation.NavigateTo("products");
    }

}